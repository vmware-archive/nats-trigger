/*
Copyright (c) 2016-2017 Bitnami

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// This file was automatically generated by lister-gen

package v1beta1

import (
	v1beta1 "github.com/kubeless/kubeless/pkg/apis/kubeless/v1beta1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// NATSTriggerLister helps list NATSTriggers.
type NATSTriggerLister interface {
	// List lists all NATSTriggers in the indexer.
	List(selector labels.Selector) (ret []*v1beta1.NATSTrigger, err error)
	// NATSTriggers returns an object that can list and get NATSTriggers.
	NATSTriggers(namespace string) NATSTriggerNamespaceLister
	NATSTriggerListerExpansion
}

// nATSTriggerLister implements the NATSTriggerLister interface.
type nATSTriggerLister struct {
	indexer cache.Indexer
}

// NewNATSTriggerLister returns a new NATSTriggerLister.
func NewNATSTriggerLister(indexer cache.Indexer) NATSTriggerLister {
	return &nATSTriggerLister{indexer: indexer}
}

// List lists all NATSTriggers in the indexer.
func (s *nATSTriggerLister) List(selector labels.Selector) (ret []*v1beta1.NATSTrigger, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta1.NATSTrigger))
	})
	return ret, err
}

// NATSTriggers returns an object that can list and get NATSTriggers.
func (s *nATSTriggerLister) NATSTriggers(namespace string) NATSTriggerNamespaceLister {
	return nATSTriggerNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// NATSTriggerNamespaceLister helps list and get NATSTriggers.
type NATSTriggerNamespaceLister interface {
	// List lists all NATSTriggers in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1beta1.NATSTrigger, err error)
	// Get retrieves the NATSTrigger from the indexer for a given namespace and name.
	Get(name string) (*v1beta1.NATSTrigger, error)
	NATSTriggerNamespaceListerExpansion
}

// nATSTriggerNamespaceLister implements the NATSTriggerNamespaceLister
// interface.
type nATSTriggerNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all NATSTriggers in the indexer for a given namespace.
func (s nATSTriggerNamespaceLister) List(selector labels.Selector) (ret []*v1beta1.NATSTrigger, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta1.NATSTrigger))
	})
	return ret, err
}

// Get retrieves the NATSTrigger from the indexer for a given namespace and name.
func (s nATSTriggerNamespaceLister) Get(name string) (*v1beta1.NATSTrigger, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1beta1.Resource("natstrigger"), name)
	}
	return obj.(*v1beta1.NATSTrigger), nil
}
